CREATE TABLE author(
	 id UUID NOT NULL PRIMARY KEY,
	 name VARCHAR(100) NOT NULL,
	 birth_date DATE NOT NULL,
	 nationality VARCHAR(50) NOT NULL
);

CREATE TABLE book (
	id UUID NOT NULL PRIMARY KEY,
	isbn VARCHAR(20) NOT NULL UNIQUE,
	title VARCHAR(150) NOT NULL,
	publish_date DATE NOT NULL,
	price NUMERIC(18,2),
	author_id UUID NOT NULL REFERENCES author(id),
);

CREATE TABLE genre (
    id UUID NOT NULL PRIMARY KEY,
    name VARCHAR(30) NOT NULL UNIQUE
);

CREATE TABLE book_genre (
    book_id UUID NOT NULL REFERENCES book(id) ON DELETE CASCADE,
    genre_id UUID NOT NULL REFERENCES genre(id) ON DELETE CASCADE,
    PRIMARY KEY(book_id, genre_id)
);













CREATE TABLE author(
	 id UUID NOT NULL PRIMARY KEY,
	 name VARCHAR(100) NOT NULL,
	 birth_date DATE NOT NULL,
	 nationality VARCHAR(50) NOT NULL,
	 registration_date TIMESTAMP,
	 last_update TIMESTAMP,
	 user_id UUID
);

CREATE TABLE book (
	id UUID NOT NULL PRIMARY KEY,
	isbn VARCHAR(20) NOT NULL UNIQUE,
	title VARCHAR(150) NOT NULL,
	publish_date DATE NOT NULL,
	genre VARCHAR(30),
	price NUMERIC(18,2),
    registration_date TIMESTAMP,
    last_update TIMESTAMP,
    user_id UUID,
	author_id UUID NOT NULL REFERENCES author(id),
	CONSTRAINT chk_genre CHECK (genre IN (
		'FICTION',
		'NOVEL',
		'FANTASY',
		'ROMANCE',
		'TALE',
		'MYSTERY',
		'BIOGRAPHY',
		'SCIENCE'
	))
);

CREATE TABLE tb_user (
    id UUID NOT NULL PRIMARY KEY,
    login VARCHAR(20) NOTNULL UNIQUE,
    password VARCHAR(300) NOT NULL,
    email VARCHAR(150) NOT NULL UNIQUE,
    roles VARCHAR[]
);

CREATE TABLE client(
	id UUID NOT NULL PRIMARY KEY,
	client_id VARCHAR(150) NOT NULL UNIQUE,
	client_secret VARCHAR(400) NOT NULL,
	redirect_uri VARCHAR(200) NOT NULL,
	scope VARCHAR(50)
);